샘플 게시판 테이블

create sequence "BOARD_SEQ" start with 1 increment by 1 maxvalue 99999;

create table "BOARD"(
	"SEQ"		number primary key,
	"TITLE"		varchar2(255)		NOT	NULL,
	"CONTENT"	varchar2(1000)		NOT	NULL,
	"WRITER"		varchar2(10)		NOT	NULL,
	"PASSWORD"	number			NOT	NULL,
	"REGDATE"	timestamp		NOT	NULL,
	"READCNT"	number			NOT	NULL,
	"BOARDTYPE"	number			NOT	NULL
);

insert into "BOARD" ("SEQ", "TITLE", "CONTENT", "WRITER", "PASSWORD", "REGDATE", "READCNT", "BOARDTYPE")
values ("BOARD_SEQ".nextval,'title1','content1','writer1',1234,'2015-10-10 14:21:12',1,1);

insert into "BOARD" ("SEQ", "TITLE", "CONTENT", "WRITER", "PASSWORD", "REGDATE", "READCNT", "BOARDTYPE")
values ("BOARD_SEQ".nextval,'title2','content2','writer2',1234,'2015-10-10 14:21:12',2,1);

insert into "BOARD" ("SEQ", "TITLE", "CONTENT", "WRITER", "PASSWORD", "REGDATE", "READCNT", "BOARDTYPE")
values ("BOARD_SEQ".nextval,'title3','content3','writer3',1234,'2015-10-10 14:21:12',3,1);

insert into "BOARD" ("SEQ", "TITLE", "CONTENT", "WRITER", "PASSWORD", "REGDATE", "READCNT", "BOARDTYPE")
values ("BOARD_SEQ".nextval,'title4','content4','writer4',1234,'2015-10-10 14:21:12',4,1);

insert into "BOARD" ("SEQ", "TITLE", "CONTENT", "WRITER", "PASSWORD", "REGDATE", "READCNT", "BOARDTYPE")
values ("BOARD_SEQ".nextval,'title5','content5','writer5',1234,'2015-10-10 14:21:12',5,2);

insert into "BOARD" ("SEQ", "TITLE", "CONTENT", "WRITER", "PASSWORD", "REGDATE", "READCNT", "BOARDTYPE")
values ("BOARD_SEQ".nextval,'title6','content6','writer6',1234,'2015-10-10 14:21:12',6,2);

insert into "BOARD" ("SEQ", "TITLE", "CONTENT", "WRITER", "PASSWORD", "REGDATE", "READCNT", "BOARDTYPE")
values ("BOARD_SEQ".nextval,'title7','content7','writer7',1234,'2015-10-10 14:21:12',7,2);

위 테이블을 이용하여 게시판을 구현하시오.
요구사항
- SEQ는 시퀀스의 값을 활용
- BOARDTYPE은 게시판을 구분하는 값(1은 자유게시판, 2는 회원게시판)
- 메인페이지(게시판 바로가기 링크(자유게시판/회원게시판)
- 링크를 누르면 각 게시판 목록이 보여짐(글등록 버튼(링크) 제공)
- 게시글 등록화면
- 게시글 등록 후 각 게시판의 목록 화면으로 보여지도록 한다.
- 게시글 확인 시 수정버튼과 삭제버튼을 이용하여 각 기능이 동작할 수 있도록 한다.
	수정 시 기존 데이터를 불러오고 비밀번호는 비어있도록 한다.
	데이터 수정 후 수정 요청 시 입력한 비밀번호를 기존 비밀번호와 검증 후 동작 여부를 결정한다.
	삭제 시 비밀번호를 입력받아 동작 여부를 결정한다.
- 위에 명확하게 정의되지 않는 기능은 자유롭게 작성한다.

위 내용을 모두 구현 후 추가 작업(선택)
- Mybatis적용
- 페이징을 처리(방식은 자유)
	





